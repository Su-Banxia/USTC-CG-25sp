@startuml
class "Window" as C_0008871575618986871683
class C_0008871575618986871683 {
+Window(const std::string & window_name) : void
+~Window() : void
..
#draw() : void
+init() : bool
#init_glfw() : bool
#init_gui() : bool
#render() : void
+run() : void
__
#height_ : int
#name_ : std::string
#width_ : int
#window_ : GLFWwindow *
}
class "Image" as C_0010959721817629218176
class C_0010959721817629218176 {
+Image() = default : void
+Image(int width, int height, int channels) : void
+Image(int width, int height, int channels, std::unique_ptr<unsigned char[]> image_data) : void
+Image(const Image & other) : void
+Image(Image &&) noexcept = default : void
+~Image() = default : void
..
+operator=(const Image & other) : Image &
+operator=(Image &&) noexcept = default : Image &
..
+channels() const : int
+data() const : unsigned char *
+get_pixel(int x, int y) const : std::vector<unsigned char>
+height() const : int
+initialize(int width, int height, int channels, std::unique_ptr<unsigned char[]> image_data) : void
+set_pixel(int x, int y, const std::vector<unsigned char> & values) : void
+width() const : int
__
-channels_ : int
-height_ : int
-image_data_ : std::unique_ptr<unsigned char[]>
-width_ : int
}
abstract "Widget" as C_0017184784915024955243
abstract C_0017184784915024955243 {
+Widget(const std::string & label) : void
+~Widget() constexpr = default : void
..
{abstract} +draw() = 0 : void
__
#label_ : std::string
}
class "ImageWidget" as C_0015764671186205139052
class C_0015764671186205139052 {
+ImageWidget(const std::string & label, const std::string & filename) : void
+~ImageWidget() : void
..
+draw() : void
-draw_image() : void
+get_image_size() const : ImVec2
-load_gltexture() : void
+save_to_disk(const std::string & filename) : void
+set_position(const ImVec2 & pos) : void
+update() : void
__
#data_ : std::shared_ptr<Image>
#filename_ : std::string
#image_height_ : int
#image_width_ : int
#position_ : ImVec2
#tex_id_ : GLuint
}
abstract "Warper" as C_0016564153805453279254
abstract C_0016564153805453279254 {
+Warper() = deleted : void
+Warper(const std::vector<ImVec2> & start_points, const std::vector<ImVec2> & end_points) : void
+~Warper() constexpr = default : void
..
{abstract} +warp(int x, int y) const = 0 : std::pair<int,int>
__
#end_points_ : std::vector<ImVec2>
#start_points_ : std::vector<ImVec2>
}
class "WarpingWidget" as C_0001358917270343686443
class C_0001358917270343686443 {
+WarpingWidget(const std::string & label, const std::string & filename) : void
+~WarpingWidget() noexcept = default : void
..
-apply_warp(Image & warped_image) : void
+draw() : void
+enable_selecting(bool flag) : void
-fill_black_holes(Image & warped_image) : void
-fisheye_warping(int x, int y, int width, int height) : std::pair<int,int>
+gray_scale() : void
+init_selections() : void
+invert() : void
+mirror(bool is_horizontal, bool is_vertical) : void
+restore() : void
+select_points() : void
+set_IDW() : void
+set_RBF() : void
+set_default() : void
+set_fisheye() : void
+warping() : void
__
-back_up_ : std::shared_ptr<Image>
-current_Warper_ : std::shared_ptr<Warper>
-draw_status_ : bool
-end_ : ImVec2
-end_points_ : std::vector<ImVec2>
-flag_enable_selecting_points_ : bool
-start_ : ImVec2
-start_points_ : std::vector<ImVec2>
-warping_type_ : WarpingType
}
enum "WarpingWidget::WarpingType" as C_0014069059973429072845
enum C_0014069059973429072845 {
kDefault
kFisheye
kIDW
kRBF
}
class "ImageWarping" as C_0009413438503253076130
class C_0009413438503253076130 {
+ImageWarping(const std::string & window_name) : void
+~ImageWarping() : void
..
+draw() : void
-draw_image() : void
-draw_open_image_file_dialog() : void
-draw_save_image_file_dialog() : void
-draw_toolbar() : void
__
-flag_open_file_dialog_ : bool
-flag_save_file_dialog_ : bool
-flag_show_main_view_ : bool
-p_image_ : std::shared_ptr<WarpingWidget>
}
class "IDWWarper" as C_0003207778641861116142
class C_0003207778641861116142 {
+IDWWarper(const std::vector<ImVec2> & start_points, const std::vector<ImVec2> & end_points) : void
+~IDWWarper() constexpr = default : void
..
-get_End_vector() : void
-get_Matrix_A(int i) const : Matrix2d
-get_Matrix_B(int i) const : Matrix2d
-get_Matrix_T_list() : void
-get_Start_vector() : void
-get_f_i(int i, const Vector2d & p) const : Vector2d
-get_final_func(const Vector2d & p) const : Vector2d
-get_omega_i(int i, const Vector2d & p) const : double
-get_sigma_i(int i, const Vector2d & p) const : double
+warp(int x, int y) const : std::pair<int,int>
__
-T_list : vector<Matrix2d>
-end_list : vector<Vector2d>
-start_list : vector<Vector2d>
}
class "RBFWarper" as C_0001171206876519165330
class C_0001171206876519165330 {
+RBFWarper(const std::vector<ImVec2> & start_points, const std::vector<ImVec2> & end_points) : void
+~RBFWarper() = default : void
..
-Build_Matrix_M() : void
-Solve_Equation() : void
-get_End_vector() : void
-get_Start_vector() : void
-get_final_func(const Vector2d & p) const : Vector2d
-get_g_d(const int & i, const double & d) const : double
-get_r_list() : void
+warp(int x, int y) const : std::pair<int,int>
__
-Matrix_A : Matrix2d
-Matrix_M : MatrixXd
-alpha_list : vector<Vector2d>
-bias : Vector2d
-end_list : vector<Vector2d>
-r_list : vector<double>
-start_list : vector<Vector2d>
-v : VectorXd
}
C_0015764671186205139052 --> C_0010959721817629218176 : #data_
C_0017184784915024955243 <|-- C_0015764671186205139052
C_0001358917270343686443 --> C_0010959721817629218176 : -back_up_
C_0001358917270343686443 o-- C_0014069059973429072845 : -warping_type_
C_0001358917270343686443 --> C_0016564153805453279254 : -current_Warper_
C_0015764671186205139052 <|-- C_0001358917270343686443
C_0014069059973429072845 --+ C_0001358917270343686443
C_0009413438503253076130 --> C_0001358917270343686443 : -p_image_
C_0008871575618986871683 <|-- C_0009413438503253076130
C_0016564153805453279254 <|-- C_0003207778641861116142
C_0016564153805453279254 <|-- C_0001171206876519165330

'Generated with clang-uml, version 0.6.0
'LLVM version clang version 19.1.3 (https://github.com/llvm/llvm-project.git ab51eccf88f5321e7c60591c5546b254b6afab99)
@enduml
