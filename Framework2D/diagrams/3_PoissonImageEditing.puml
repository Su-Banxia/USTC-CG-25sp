@startuml
class "Image" as C_0010959721817629218176
class C_0010959721817629218176 {
+Image() = default : void
+Image(int width, int height, int channels) : void
+Image(int width, int height, int channels, std::unique_ptr<unsigned char[]> image_data) : void
+Image(const Image & other) : void
+Image(Image &&) noexcept = default : void
+~Image() = default : void
..
+operator=(const Image & other) : Image &
+operator=(Image &&) noexcept = default : Image &
..
+channels() const : int
+data() const : unsigned char *
+get_pixel(int x, int y) const : std::vector<unsigned char>
+height() const : int
+initialize(int width, int height, int channels, std::unique_ptr<unsigned char[]> image_data) : void
+set_pixel(int x, int y, const std::vector<unsigned char> & values) : void
+width() const : int
__
-channels_ : int
-height_ : int
-image_data_ : std::unique_ptr<unsigned char[]>
-width_ : int
}
abstract "Widget" as C_0017184784915024955243
abstract C_0017184784915024955243 {
+Widget(const std::string & label) : void
+~Widget() constexpr = default : void
..
{abstract} +draw() = 0 : void
__
#label_ : std::string
}
class "ImageWidget" as C_0015764671186205139052
class C_0015764671186205139052 {
+ImageWidget(const std::string & label, const std::string & filename) : void
+~ImageWidget() : void
..
+draw() : void
-draw_image() : void
+get_image_size() const : ImVec2
-load_gltexture() : void
+save_to_disk(const std::string & filename) : void
+set_position(const ImVec2 & pos) : void
+update() : void
__
#data_ : std::shared_ptr<Image>
#filename_ : std::string
#image_height_ : int
#image_width_ : int
#position_ : ImVec2
#tex_id_ : GLuint
}
abstract "CloningWay" as C_0016350851694242887586
abstract C_0016350851694242887586 {
+CloningWay(std::shared_ptr<Image> src_img, std::shared_ptr<Image> tar_img, std::shared_ptr<Image> src_selected_mask) : void
+~CloningWay() = default : void
..
+get_Source() : std::shared_ptr<Image>
+get_Target() : std::shared_ptr<Image>
+get_mask() : std::shared_ptr<Image>
{abstract} +solve() = 0 : std::shared_ptr<Image>
__
-mask_image : shared_ptr<Image>
-source_image : shared_ptr<Image>
-target_image : shared_ptr<Image>
}
class "MixingGradients" as C_0017262319219856610362
class C_0017262319219856610362 {
+MixingGradients(std::shared_ptr<Image> src_img, std::shared_ptr<Image> tar_img, std::shared_ptr<Image> src_selected_mask, int Soffset_x, int Soffset_y, int Toffset_x, int Toffset_y) : void
+~MixingGradients() = default : void
..
+Source_offset_x() : int
+Source_offset_y() : int
+Target_offset_x() : int
+Target_offset_y() : int
-build_B() : void
-build_matrix() : void
+get_mask_size() : void
-get_source_pixel(int x, int y) : std::vector<unsigned char>
-get_target_pixel(int x, int y) : std::vector<unsigned char>
+in_Mask(int x, int y) : bool
+solve() : std::shared_ptr<Image>
__
-B_b : VectorXd
-B_g : VectorXd
-B_r : VectorXd
-Soffset_x_ : int
-Soffset_y_ : int
-Toffset_x_ : int
-Toffset_y_ : int
-is_b_initialized : bool
-is_matrix_initialized : bool
-mask_h : int
-mask_w : int
-solver : SimplicialLDLT<SparseMatrix<double>>
}
class "Paste" as C_0004885115306196305430
class C_0004885115306196305430 {
+Paste(std::shared_ptr<Image> src_img, std::shared_ptr<Image> tar_img, std::shared_ptr<Image> src_selected_mask) : void
+~Paste() = default : void
..
+solve() : std::shared_ptr<Image>
__
}
class "SeamlessClone" as C_0011490411499695849197
class C_0011490411499695849197 {
+SeamlessClone(std::shared_ptr<Image> src_img, std::shared_ptr<Image> tar_img, std::shared_ptr<Image> src_selected_mask, int Soffset_x, int Soffset_y, int Toffset_x, int Toffset_y) : void
+~SeamlessClone() = default : void
..
+Source_offset_x() : int
+Source_offset_y() : int
+Target_offset_x() : int
+Target_offset_y() : int
-build_B() : void
-build_matrix() : void
+get_mask_size() : void
-get_source_pixel(int x, int y) : std::vector<unsigned char>
+in_Mask(int x, int y) : bool
+solve() : std::shared_ptr<Image>
__
-B_b : VectorXd
-B_g : VectorXd
-B_r : VectorXd
-Soffset_x_ : int
-Soffset_y_ : int
-Toffset_x_ : int
-Toffset_y_ : int
-is_b_initialized : bool
-is_matrix_initialized : bool
-mask_h : int
-mask_w : int
-solver : SimplicialLDLT<SparseMatrix<double>>
}
abstract "Shape" as C_0007080987761836185060
abstract C_0007080987761836185060 {
+~Shape() constexpr = default : void
..
+add_control_point(float x, float y) : void
{abstract} +draw(const Config & config) const = 0 : void
+finish() : void
{abstract} +get_interior_pixels() const = 0 : std::vector<std::pair<int,int>>
{abstract} +update(float x, float y) = 0 : void
__
}
class "Shape::Config" as C_0007933054238878135100
class C_0007933054238878135100 {
__
+bias : float[2]
+line_color : unsigned char[4]
+line_thickness : float
}
class "Ellipse" as C_0000967933873543071895
class C_0000967933873543071895 {
+Ellipse() = default : void
+Ellipse(float start_point_x, float start_point_y, float end_point_x, float end_point_y) : void
+~Ellipse() constexpr = default : void
..
+draw(const Config & config) const : void
+get_interior_pixels() const : std::vector<std::pair<int,int>>
+update(float x, float y) : void
__
-end_point_x_ : float
-end_point_y_ : float
-start_point_x_ : float
-start_point_y_ : float
}
class "FreeHand" as C_0014323371641069020444
class C_0014323371641069020444 {
+FreeHand() = default : void
+FreeHand(std::vector<float> x_list, std::vector<float> y_list) : void
+~FreeHand() constexpr = default : void
..
+add_control_point(float x, float y) : void
+draw(const Config & config) const : void
+get_interior_pixels() const : std::vector<std::pair<int,int>>
+update(float x, float y) : void
__
-x_list_ : std::vector<float>
-y_list_ : std::vector<float>
}
class "Line" as C_0018444896120262260081
class C_0018444896120262260081 {
+Line() = default : void
+Line(float start_point_x, float start_point_y, float end_point_x, float end_point_y) : void
+~Line() constexpr = default : void
..
+draw(const Config & config) const : void
+get_interior_pixels() const : std::vector<std::pair<int,int>>
+update(float x, float y) : void
__
-end_point_x_ : float
-end_point_y_ : float
-start_point_x_ : float
-start_point_y_ : float
}
class "Rect" as C_0008233609096235910285
class C_0008233609096235910285 {
+Rect() = default : void
+Rect(float start_point_x, float start_point_y, float end_point_x, float end_point_y) : void
+~Rect() constexpr = default : void
..
+draw(const Config & config) const : void
+get_interior_pixels() const : std::vector<std::pair<int,int>>
+update(float x, float y) : void
__
-end_point_x_ : float
-end_point_y_ : float
-start_point_x_ : float
-start_point_y_ : float
}
C_0015764671186205139052 --> C_0010959721817629218176 : #data_
C_0017184784915024955243 <|-- C_0015764671186205139052
C_0016350851694242887586 --> C_0010959721817629218176 : -source_image
C_0016350851694242887586 --> C_0010959721817629218176 : -target_image
C_0016350851694242887586 --> C_0010959721817629218176 : -mask_image
C_0017262319219856610362 ..> C_0010959721817629218176
C_0016350851694242887586 <|-- C_0017262319219856610362
C_0004885115306196305430 ..> C_0010959721817629218176
C_0016350851694242887586 <|-- C_0004885115306196305430
C_0011490411499695849197 ..> C_0010959721817629218176
C_0016350851694242887586 <|-- C_0011490411499695849197
C_0007080987761836185060 ..> C_0007933054238878135100
C_0007933054238878135100 --+ C_0007080987761836185060
C_0000967933873543071895 ..> C_0007933054238878135100
C_0007080987761836185060 <|-- C_0000967933873543071895
C_0014323371641069020444 ..> C_0007933054238878135100
C_0007080987761836185060 <|-- C_0014323371641069020444
C_0018444896120262260081 ..> C_0007933054238878135100
C_0007080987761836185060 <|-- C_0018444896120262260081
C_0008233609096235910285 ..> C_0007933054238878135100
C_0007080987761836185060 <|-- C_0008233609096235910285

'Generated with clang-uml, version 0.6.0
'LLVM version clang version 19.1.3 (https://github.com/llvm/llvm-project.git ab51eccf88f5321e7c60591c5546b254b6afab99)
@enduml
